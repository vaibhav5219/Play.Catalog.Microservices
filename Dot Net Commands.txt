Create .net web api repo    =>  dotnet new webapi -n Play.Catalog.Service --framework net5.0
Create .net class library   =>  dotnet new classlib -n Play.Common --framework net5.0
Build  			    =>  dotnet build
Run    			    =>  dotnet run
Enable https certs          =>  dotnet dev-certs https --trust
Add MongoDB driver package  =>  dotnet add package MongoDB.Driver
Add MS Extension config     =>  dotnet add package Microsoft.Extensions.Configuration
Add MS Ext conf binder      =>  dotnet add package Microsoft.Extensions.Configuration.Binder
Add MS Ext Dependency Inj   =>  dotnet add package Microsoft.Extensions.DependencyInjection
Create package of class lib =>  dotnet pack -o ..\..\..\packages\
Provide package location    =>  dotnet nuget add source D:\projects\packages -n PlayEconomy
Provide pack ref in csproj  =>  dotnet add package Play.Common
Add MS Polly Package	    =>  dotnet add package Microsoft.Extensions.Http.Polly
Add ref to any repo         =>  dotnet add reference ..\path\of\repo\of\csproj --framework net5.0
Adding MassTransit package  =>  dotnet add package MassTransit.AspNetCore
Add RabbitMQ                =>  dotnet add package MassTransit.RabbitMQ
Create nuget pkg with ver   =>  dotnet pack -p:PackageVersion=1.1.0 -o ..\..\..\packages\

	#################################################################################

Docker Commands

Run docker container => docker run -d --rm --name mongo -p 27017:27017 -v mongodbdata:/data/db mongo

running image => docker ps
Starting MongoDB  => docker-compose up -d








